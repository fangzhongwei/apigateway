// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.jxjxgo.apigateway.domain.http.req.depositrequest

import com.jxjxgo.apigateway.validate.Validator._
import com.jxjxgo.common.exception.ErrorCode._

@SerialVersionUID(0L)
final case class DepositReq(
                             @Validate(required = true, maxLength = 16, error = EC_INVALID_REQUEST)
                             channelCode: String = "",
                             @Validate(required = true, maxLength = 16, error = EC_INVALID_REQUEST)
                             priceCode: String = "",
                             @Validate(required = true, min = 1, max = 100000, error = EC_INVALID_REQUEST)
                             price: String = "",
                             @Validate(required = true, min = 50, max = 10000, error = EC_INVALID_REQUEST)
                             diamondAmount: Int = 0,
                             ext1: String = "",
                             ext2: String = "",
                             ext3: String = "",
                             ext4: String = "",
                             ext5: String = ""
                           ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[DepositReq] with com.trueaccord.lenses.Updatable[DepositReq] {
  @transient
  private[this] var __serializedSizeCachedValue: Int = 0

  private[this] def __computeSerializedValue(): Int = {
    var __size = 0
    if (channelCode != "") {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, channelCode)
    }
    if (priceCode != "") {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, priceCode)
    }
    if (price != "") {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, price)
    }
    if (diamondAmount != 0) {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(4, diamondAmount)
    }
    if (ext1 != "") {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, ext1)
    }
    if (ext2 != "") {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, ext2)
    }
    if (ext3 != "") {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, ext3)
    }
    if (ext4 != "") {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, ext4)
    }
    if (ext5 != "") {
      __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(9, ext5)
    }
    __size
  }

  final override def serializedSize: Int = {
    var read = __serializedSizeCachedValue
    if (read == 0) {
      read = __computeSerializedValue()
      __serializedSizeCachedValue = read
    }
    read
  }

  def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
    {
      val __v = channelCode
      if (__v != "") {
        _output__.writeString(1, __v)
      }
    };
    {
      val __v = priceCode
      if (__v != "") {
        _output__.writeString(2, __v)
      }
    };
    {
      val __v = price
      if (__v != "") {
        _output__.writeString(3, __v)
      }
    };
    {
      val __v = diamondAmount
      if (__v != 0) {
        _output__.writeInt32(4, __v)
      }
    };
    {
      val __v = ext1
      if (__v != "") {
        _output__.writeString(5, __v)
      }
    };
    {
      val __v = ext2
      if (__v != "") {
        _output__.writeString(6, __v)
      }
    };
    {
      val __v = ext3
      if (__v != "") {
        _output__.writeString(7, __v)
      }
    };
    {
      val __v = ext4
      if (__v != "") {
        _output__.writeString(8, __v)
      }
    };
    {
      val __v = ext5
      if (__v != "") {
        _output__.writeString(9, __v)
      }
    };
  }

  def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq = {
    var __channelCode = this.channelCode
    var __priceCode = this.priceCode
    var __price = this.price
    var __diamondAmount = this.diamondAmount
    var __ext1 = this.ext1
    var __ext2 = this.ext2
    var __ext3 = this.ext3
    var __ext4 = this.ext4
    var __ext5 = this.ext5
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __channelCode = _input__.readString()
        case 18 =>
          __priceCode = _input__.readString()
        case 26 =>
          __price = _input__.readString()
        case 32 =>
          __diamondAmount = _input__.readInt32()
        case 42 =>
          __ext1 = _input__.readString()
        case 50 =>
          __ext2 = _input__.readString()
        case 58 =>
          __ext3 = _input__.readString()
        case 66 =>
          __ext4 = _input__.readString()
        case 74 =>
          __ext5 = _input__.readString()
        case tag => _input__.skipField(tag)
      }
    }
    com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq(
      channelCode = __channelCode,
      priceCode = __priceCode,
      price = __price,
      diamondAmount = __diamondAmount,
      ext1 = __ext1,
      ext2 = __ext2,
      ext3 = __ext3,
      ext4 = __ext4,
      ext5 = __ext5
    )
  }

  def withChannelCode(__v: String): DepositReq = copy(channelCode = __v)

  def withPriceCode(__v: String): DepositReq = copy(priceCode = __v)

  def withPrice(__v: String): DepositReq = copy(price = __v)

  def withDiamondAmount(__v: Int): DepositReq = copy(diamondAmount = __v)

  def withExt1(__v: String): DepositReq = copy(ext1 = __v)

  def withExt2(__v: String): DepositReq = copy(ext2 = __v)

  def withExt3(__v: String): DepositReq = copy(ext3 = __v)

  def withExt4(__v: String): DepositReq = copy(ext4 = __v)

  def withExt5(__v: String): DepositReq = copy(ext5 = __v)

  def getField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
    __field.getNumber match {
      case 1 => {
        val __t = channelCode
        if (__t != "") __t else null
      }
      case 2 => {
        val __t = priceCode
        if (__t != "") __t else null
      }
      case 3 => {
        val __t = price
        if (__t != "") __t else null
      }
      case 4 => {
        val __t = diamondAmount
        if (__t != 0) __t else null
      }
      case 5 => {
        val __t = ext1
        if (__t != "") __t else null
      }
      case 6 => {
        val __t = ext2
        if (__t != "") __t else null
      }
      case 7 => {
        val __t = ext3
        if (__t != "") __t else null
      }
      case 8 => {
        val __t = ext4
        if (__t != "") __t else null
      }
      case 9 => {
        val __t = ext5
        if (__t != "") __t else null
      }
    }
  }

  override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)

  def companion = com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq
}

object DepositReq extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq] = this

  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(3), 0).asInstanceOf[Int],
      __fieldsMap.getOrElse(__fields.get(4), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(5), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(6), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(7), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(8), "").asInstanceOf[String]
    )
  }

  def descriptor: _root_.com.google.protobuf.Descriptors.Descriptor = DepositrequestProto.descriptor.getMessageTypes.get(0)

  def messageCompanionForField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)

  def enumCompanionForField(__field: _root_.com.google.protobuf.Descriptors.FieldDescriptor): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)

  lazy val defaultInstance = com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq(
  )

  implicit class DepositReqLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, com.jxjxgo.apigateway.domain.http.req.depositrequest.DepositReq](_l) {
    def channelCode: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.channelCode)((c_, f_) => c_.copy(channelCode = f_))

    def priceCode: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.priceCode)((c_, f_) => c_.copy(priceCode = f_))

    def price: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.price)((c_, f_) => c_.copy(price = f_))

    def diamondAmount: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.diamondAmount)((c_, f_) => c_.copy(diamondAmount = f_))

    def ext1: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.ext1)((c_, f_) => c_.copy(ext1 = f_))

    def ext2: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.ext2)((c_, f_) => c_.copy(ext2 = f_))

    def ext3: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.ext3)((c_, f_) => c_.copy(ext3 = f_))

    def ext4: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.ext4)((c_, f_) => c_.copy(ext4 = f_))

    def ext5: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.ext5)((c_, f_) => c_.copy(ext5 = f_))
  }

  final val CHANNELCODE_FIELD_NUMBER = 1
  final val PRICECODE_FIELD_NUMBER = 2
  final val PRICE_FIELD_NUMBER = 3
  final val DIAMONDAMOUNT_FIELD_NUMBER = 4
  final val EXT1_FIELD_NUMBER = 5
  final val EXT2_FIELD_NUMBER = 6
  final val EXT3_FIELD_NUMBER = 7
  final val EXT4_FIELD_NUMBER = 8
  final val EXT5_FIELD_NUMBER = 9
}
